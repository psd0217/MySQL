windows mysql 설치
 - bitnami wamp 사용

root 비밀번호 셋팅
설치 경로 확인

커멘드로 설치 경로 접근!
.\mysql -uroot -p 명령어 사용
비밀 번호 체크

//opentutorials 이름을 가진 데이터베이스 생성
CREATE DATABASE opentutorials;
//opentutorials 이름을 가진 데이터베이스 제거
DROP DATABASE opentutorials;

//데이터베이스 확인
SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| opentutorials      |
| performance_schema |
| sys                |
+--------------------+

//데이터베이스 사용
USE opentutorials;

//SQL Structured Query Language  데이터베이스 서버에게 요청할때 사용하는 언어
//S = 정리정돈 = 구조화된.  
//Q = 요청
//L = 언어
//관계형 데이터베이스 공통 언어

// 1. SQL은 쉽다.
// 2. 중요하다. -> 관계형 데이터 베이스에서 공통적으로 사용하는 언어이다. 

// table, 표
// row, record, 행
// column, 열


//테이블 생성
CREATE TABLE topic(
    //이름 데이터타입(크기?길이?) 빈값허용 자동증가
    id INT(11) NOT NULL AUTO_INCREMENT, //id
    title VARCHAR(100) NOT NULL, //타이틀
    description TEXT NULL,       //설명
    created DATETIME NOT NULL,   //생성날짜
    author VARCHAR(30) NULL,    //작가
    profile VARCHAR(100) NULL,  //프로필
     PRIMARY KEY(id),           //id컬럼은 고유한다, 중복시키지 않는다
)

//CRUD
//Create 생성
//Read 읽기
//Update 변경
//Delete 삭제

//모든 테이블 보기
SHOW TABLES;

//테이블 보기
DESC topic;

//행 추가 (create row)
//INSERT INTO `table_name`(column_1,column_2,...)
//VALUES (value_1,value_2,...);
INSERT INTO topic (title,description,created,author,profile)
VALUES('MySQL','MySQL is ...', NOW(),'egoing','developer');
INSERT INTO topic (title,description,created,author,profile)
VALUES('ORACLE','ORACLE is ...', NOW(),'egoing','developer');
INSERT INTO topic (title,description,created,author,profile)
VALUES('SQL Server','SQL Server is ...', NOW(),'soon','developer2');
INSERT INTO topic (title,description,created,author,profile)
VALUES('PostgerSQL','PostgerSQL is ...', NOW(),'duru','database administrator');
INSERT INTO topic (title,description,created,author,profile)
VALUES('MongoDB','MongoDB is ...', NOW(),'taeho','data scientist, developer');


//테이블 읽기
SELECT * FROM topic; //topic 테이블의 모든행 출력
+----+------------+-------------------+---------------------+--------+---------------------------+
| id | title      | description       | created             | author | profile                   |
+----+------------+-------------------+---------------------+--------+---------------------------+
|  1 | MySQL      | MySQL is ...      | 2020-12-14 15:04:45 | egoing | developer                 |
|  2 | ORACLE     | ORACLE is ...     | 2020-12-14 15:06:43 | egoing | developer                 |
|  3 | SQL Server | SQL Server is ... | 2020-12-14 15:08:07 | soon   | developer2                |
|  4 | PostgerSQL | PostgerSQL is ... | 2020-12-14 15:09:19 | duru   | database administrator    |
|  5 | MongoDB    | MongoDB is ...    | 2020-12-14 15:10:21 | taeho  | data scientist, developer |
+----+------------+-------------------+---------------------+--------+---------------------------+

//SELECT
SELECT id,title,created,author FROM topic; // 보고싶은 컬럼만 검색
+----+------------+---------------------+--------+
| id | title      | created             | author |
+----+------------+---------------------+--------+
|  1 | MySQL      | 2020-12-14 15:04:45 | egoing |
|  2 | ORACLE     | 2020-12-14 15:06:43 | egoing |
|  3 | SQL Server | 2020-12-14 15:08:07 | soon   |
|  4 | PostgerSQL | 2020-12-14 15:09:19 | duru   |
|  5 | MongoDB    | 2020-12-14 15:10:21 | taeho  |
+----+------------+---------------------+--------+
SELECT "soon", 1+1; // 표현되야할 컬럼  FROM은 생략가능!
+------+-----+
| soon | 1+1 |
+------+-----+
| soon |   2 |
+------+-----+

// WHERE 검색  는 FROM 뒤에!
SELECT id,title,created,author FROM topic WHERE author='soon'; 
+----+------------+---------------------+--------+
| id | title      | created             | author |
+----+------------+---------------------+--------+
|  3 | SQL Server | 2020-12-14 15:08:07 | soon   |
+----+------------+---------------------+--------+

//ORDER BY 정렬  는 WHERE 뒤에!
//ORDER BY 정렬컬럼 순(ASC)/역순(DESC)
SELECT id,title,created,author FROM topic WHERE author='egoing' ORDER BY id DESC;
+----+--------+---------------------+--------+
| id | title  | created             | author |
+----+--------+---------------------+--------+
|  2 | ORACLE | 2020-12-14 15:06:43 | egoing |
|  1 | MySQL  | 2020-12-14 15:04:45 | egoing |
+----+--------+---------------------+--------+

//UPDATE         주의! WHERE문을 빠트리면 모든 행에 적용된다!!!!
UPDATE topic SET description='Oracle is ...', title='Oracle' WHERE id=2;
+----+------------+-------------------+---------------------+--------+---------------------------+
| id | title      | description       | created             | author | profile                   |
+----+------------+-------------------+---------------------+--------+---------------------------+
|  1 | MySQL      | MySQL is ...      | 2020-12-14 15:04:45 | egoing | developer                 |
|  2 | Oracle     | Oracle is ...     | 2020-12-14 15:06:43 | egoing | developer                 |
|  3 | SQL Server | SQL Server is ... | 2020-12-14 15:08:07 | soon   | developer2                |
|  4 | PostgerSQL | PostgerSQL is ... | 2020-12-14 15:09:19 | duru   | database administrator    |
|  5 | MongoDB    | MongoDB is ...    | 2020-12-14 15:10:21 | taeho  | data scientist, developer |
+----+------------+-------------------+---------------------+--------+---------------------------+

//DELETE         주의! WHERE문을 빠트리면 모든 행에 적용된다!!!!
DELETE FROM topic WHERE id=5;
+----+------------+-------------------+---------------------+--------+------------------------+
| id | title      | description       | created             | author | profile                |
+----+------------+-------------------+---------------------+--------+------------------------+
|  1 | MySQL      | MySQL is ...      | 2020-12-14 15:04:45 | egoing | developer              |
|  2 | Oracle     | Oracle is ...     | 2020-12-14 15:06:43 | egoing | developer              |
|  3 | SQL Server | SQL Server is ... | 2020-12-14 15:08:07 | soon   | developer2             |
|  4 | PostgerSQL | PostgerSQL is ... | 2020-12-14 15:09:19 | duru   | database administrator |
+----+------------+-------------------+---------------------+--------+------------------------+


//관계형 데이터베이스
//하나의 테이블에 중복된 정보를 다른 테이블로 만들어 유지보수가 쉽게 만들어준다.
//단점 ? 테이블이 두개로 나눠지기때문에 직관성이 떨어진다.
//mysql에서는 하나로 합쳐서 볼 수 있다!!!

// 1. 테이블 분리
// 기존 topic 테이블 이름변경
RENAME TABLE topic TO topic_backup;
// topic 테이블 생성
CREATE TABLE topic(
    id INT(11) NOT NULL AUTO_INCREMENT,
    title VARCHAR(30) NOT NULL,
    description TEXT NULL,     
    created DATETIME NOT NULL,
    author_id INT(11) NULL,
    PRIMARY KEY(id) 
);

//DESC topic;
+-------------+-------------+------+-----+---------+----------------+
| Field       | Type        | Null | Key | Default | Extra          |
+-------------+-------------+------+-----+---------+----------------+
| id          | int         | NO   | PRI | NULL    | auto_increment |
| title       | varchar(30) | NO   |     | NULL    |                |
| description | text        | YES  |     | NULL    |                |
| created     | datetime    | NO   |     | NULL    |                |
| author_id   | int         | YES  |     | NULL    |                |
+-------------+-------------+------+-----+---------+----------------+


//author 테이블 생성
CREATE TABLE author(
    id INT(11) NOT NULL AUTO_INCREMENT,
    name VARCHAR(20) NOT NULL,
    profile VARCHAR(200) NULL,
    PRIMARY KEY(id)
);

//DESC author;
+---------+--------------+------+-----+---------+----------------+
| Field   | Type         | Null | Key | Default | Extra          |
+---------+--------------+------+-----+---------+----------------+
| id      | int          | NO   | PRI | NULL    | auto_increment |
| name    | varchar(20)  | NO   |     | NULL    |                |
| profile | varchar(200) | YES  |     | NULL    |                |
+---------+--------------+------+-----+---------+----------------+

//author 테이블 데이터 추가
INSERT INTO author(id, name, profile) values(1,'egoing','developer');

//SELECT * FROM author;
+----+--------+-----------+
| id | name   | profile   |
+----+--------+-----------+
|  1 | egoing | developer |
+----+--------+-----------+

INSERT INTO topic(id,title,description,created,author_id)
VALUES(1,'MySQL','MySQL is ...','2020-12-14 15:04:45',1);
INSERT INTO topic(id,title,description,created,author_id)
VALUES(2,'Oracle','Oracle is ...','2020-12-14 15:06:43',1);

//SELECT * FROM topic;
+----+--------+---------------+---------------------+-----------+
| id | title  | description   | created             | author_id |
+----+--------+---------------+---------------------+-----------+
|  1 | MySQL  | MySQL is ...  | 2020-12-14 15:04:45 |         1 |
|  2 | Oracle | Oracle is ... | 2020-12-14 15:06:43 |         1 |
+----+--------+---------------+---------------------+-----------+

//topic_backup과 맞추기
INSERT INTO author (id, name, profile)
VALUES(3, 'duru', 'database administrator'); 
INSERT INTO author (id, name, profile)
VALUES(4, 'taeho', 'data scientist, developer');
SELECT * FROM author;       
+----+--------+---------------------------+
| id | name   | profile                   |
+----+--------+---------------------------+
|  1 | egoing | developer                 |
|  2 | soon   | developer2                |
|  3 | duru   | database administrator    |
|  4 | taeho  | data scientist, developer |
+----+--------+---------------------------+

INSERT INTO topic(id,title,description,created,author_id)
VALUES(3,'SQL Server','SQL Server is ...','2020-12-14 15:08:07',2);
INSERT INTO topic(id,title,description,created,author_id)
VALUES(4,'PostgerSQL','PostgerSQL is ...','2020-12-14 15:09:19',3);
INSERT INTO topic(id,title,description,created,author_id)
VALUES(6,'MongoDB','MongoDB is ...','2020-12-14 15:52:16',4); 
SELECT * FROM topic;
+----+------------+-------------------+---------------------+-----------+
| id | title      | description       | created             | author_id |
+----+------------+-------------------+---------------------+-----------+
|  1 | MySQL      | MySQL is ...      | 2020-12-14 15:04:45 |         1 |
|  2 | Oracle     | Oracle is ...     | 2020-12-14 15:06:43 |         1 |
|  3 | SQL Server | SQL Server is ... | 2020-12-14 15:08:07 |         2 |
|  4 | PostgerSQL | PostgerSQL is ... | 2020-12-14 15:09:19 |         3 |
|  6 | MongoDB    | MongoDB is ...    | 2020-12-14 15:52:16 |         4 |
+----+------------+-------------------+---------------------+-----------+



